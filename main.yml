- name: Generate DRS and local publication
  hosts: gateway
  tasks:
    - name: Copy config files
      copy:
        src: "{{ item }}"
        dest: /esg/config/{{ item }}
      with_items:
        - esgf_idp_static.xml
        - esgf_known_providers.xml
        - esgf_policies_local.xml
        - esgf_ats_static.xml

    - name: Add hostcert to grid-security
      shell: cp /etc/certs/hostcert.pem /etc/grid-security/certificates/$(openssl x509 -hash -noout < /etc/certs/hostcert.pem).0

    # Copy SQL database (Provide user with publication permissions -> user: pepito, password: Cochecitos1!)
    - name: Install pyexpect
      pip:
        name: pexpect
        executable: "/usr/local/conda/envs/esgf-pub/bin/pip"

    - name: Delete existing database sessions
      expect:
        command: psql -c "select pg_terminate_backend(procpid) from pg_stat_activity where datname = 'esgcet'" esgcet dbsuper
        responses:
          Password: "CHANGEME"
      environment:
        PYTHONPATH: /usr/local/conda/envs/esgf-pub/lib/python2.7/site-packages/
      ignore_errors: True

    - name: Delete existing database
      expect:
        command: dropdb -U dbsuper esgcet
        responses:
          Password: "CHANGEME"
      environment:
        PYTHONPATH: /usr/local/conda/envs/esgf-pub/lib/python2.7/site-packages/

    - name: Create esgcet database
      expect:
        command: createdb -U dbsuper esgcet
        responses:
          Password: "CHANGEME"
      environment:
        PYTHONPATH: /usr/local/conda/envs/esgf-pub/lib/python2.7/site-packages/

    - name: Import postgres database
      expect:
        command: bash -c 'psql --username dbsuper esgcet < /root/esgf-test/db.sql'
        responses:
          Password: "CHANGEME"
      environment:
        PYTHONPATH: /usr/local/conda/envs/esgf-pub/lib/python2.7/site-packages/

    # Various changes
    - name: Allow access from everywhere to COG
      replace:
        path: /usr/local/cog/cog_install/settings.py
        regexp: ALLOWED_HOSTS = siteManager\.get\('ALLOWED_HOSTS', default=SITE_DOMAIN\)\.split\(","\)
        replace: ALLOWED_HOSTS = ['*']

    - name: Create .globus dir
      file:
        state: directory
        path: "{{ ansible_env.HOME }}/.globus"
        
    # DRS and mapfile
    - name: Copy sftlf.nc to /esg/data/test
      copy: src=sftlf.nc dest=/esg/data/test/sftlf.nc
      tags: drs

    - name: mkdir /esg/data/drs
      file:
        state: directory
        path: /esg/data/drs
      tags: drs

    - name: Copy esg.test.ini
      copy: src=esg.test.ini dest=/esg/config/esgcet/esg.test.ini
      tags: drs

    # Publication
    - name: myproxy-logon
      expect:
        command: myproxy-logon -b -s esgf.test.es -l pepito -p 7512 -t 72 -o {{ ansible_env.HOME }}/.globus/certificate-file
        responses:
          pass: Cochecitos1!
      environment:
        PYTHONPATH: /usr/local/conda/envs/esgf-pub/lib/python2.7/site-packages/

    - name: Copy certificates into {{ ansible_env.HOME }}/.globus
      copy:
        src: /etc/grid-security/certificates
        dest: "{{ ansible_env.HOME }}/.globus"

    - name: esgdrs
      command: esgdrs {{ item }} --project test --symlink  --set-value project=Test /esg/data/test/
      args:
        chdir: /esg/data/drs
      with_items: [list, tree, todo, upgrade]
      tags: [never, drs]

    - name: esgmapfile
      command: esgmapfile --project test Test/
      args:
        chdir: /esg/data/drs
      tags: [never, drs]

    - name: Publish
      expect:
        command: esgpublish --project test --map mapfiles/ --service fileservice --thredds --publish
        chdir: /esg/data/drs
        responses:
          Allow: no
      environment:
        PYTHONPATH: /usr/local/conda/envs/esgf-pub/lib/python2.7/site-packages/
